version: "3.4"
services:
  # Usenet Services
  nzbget:
    image: nzbgetcom/nzbget:latest
    container_name: nzbget
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - NZBGET_USER= # DESIRED USERNAME (optional)
      - NZBGET_PASS= # DESIRED PASSWORD (optional)
    volumes:
      - <media server home>/ext/config/nzbget:/config
      - <media server home>/usenet/downloads:/downloads #optional
    ports:
      - 6789:6789
    restart: unless-stopped

  # *arr Services
  prowlarr: # For indexer management.
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - <media server home>/ext/config/prowlarr:/config
    ports:
      - 9696:9696

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - <media server home>/ext/config/sonarr:/config
      - <media server home>/ext/library/series:/tv #optional
      - <media server home>/usenet/downloads/completed/Series:/downloads #optional
    depends_on: 
      - prowlarr 
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - <media server home>/ext/config/radarr:/config
      - <media server home>/ext/library/films:/movies #optional
      - <media server home>/usenet/downloads/completed/Films:/downloads #optional
    depends_on: 
      - prowlarr 
    ports:
      - 7878:7878
    restart: unless-stopped

  # Media Servers
  plex:
    image: plexinc/pms-docker
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM= # Go here to get this: https://www.plex.tv/claim
      - TZ=America/New_York
    devices:
      - /dev/dri:/dev/dri # Pass DRI devices for hardware supported video processing
    volumes:
      - <media server home>/ext/config/plex:/config
      - <media server home>/ext/library:/library
      - <media server home>/scratch/plex/transcode:/transcode
    restart: unless-stopped

  # Management Interface
  organizr:
    container_name: organizr
    hostname: organizr
    image: organizr/organizr
    restart: unless-stopped
    ports:
        - 90:80
    volumes:
        - <media server home>/ext/config/organizr:/config
    environment:
        - fpm=true #true or false | using true will provide better performance
        - branch=v2-master #v2-master or #v2-develop
        - PUID=1000
        - PGID=1000
        - TZ=America/New_York

  # System Monitoring
  prometheus:
      image: prom/prometheus
      container_name: prometheus
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=America/New_York
        - UMASK_SET=022
      volumes:
        - <media server home>/ext/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - 9292:9090
      restart: unless-stopped

  node-exporter:
    privileged: true
    image: prom/node-exporter
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(rootfs/)?(dev|etc|host|proc|run|sys|volume1)($$|/)"

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - UMASK_SET=022
    ports:
      - 3000:3000
    restart: unless-stopped
